/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export function defaultConductorConfig(adminPort: number, conductorEnvironmentPath: string, keystoreConnectionUrl: string, bootstrapServerUrl: string, signalingServerUrl: string): string
export function saveWebhapp(webHappPath: string, uisDir: string, happsDir: string): Promise<string>
export interface ZomeCallUnsignedNapi {
  cellId: Array<Array<number>>
  zomeName: string
  fnName: string
  payload: Array<number>
  capSecret?: Array<number>
  provenance: Array<number>
  nonce: Array<number>
  expiresAt: number
}
export interface ZomeCallNapi {
  cellId: Array<Array<number>>
  zomeName: string
  fnName: string
  payload: Array<number>
  capSecret?: Array<number>
  provenance: Array<number>
  nonce: Array<number>
  expiresAt: number
  signature: Array<number>
}
export type JsWeRustHandler = WeRustHandler
export class WeRustHandler {
  constructor()
  static connect(keystoreUrl: string, adminPort: number, appPort: number, passphrase: string): Promise<WeRustHandler>
  signZomeCall(zomeCallUnsignedJs: ZomeCallUnsignedNapi): Promise<ZomeCallNapi>
  fetchAndStoreUi(host: string, devhubDnaHash: string, guiReleaseHash: string, uisStorageDir: string, appstoreAppId: string): Promise<void>
  fetchAndStoreHapp(host: string, devhubDnaHash: string, happReleaseHash: string, storageDir: string, appstoreAppId: string): Promise<void>
}
export type JsZomeCallSigner = ZomeCallSigner
export class ZomeCallSigner {
  constructor()
  static connect(connectionUrl: string, passphrase: string): Promise<ZomeCallSigner>
  signZomeCall(zomeCallUnsignedJs: ZomeCallUnsignedNapi): Promise<ZomeCallNapi>
}
